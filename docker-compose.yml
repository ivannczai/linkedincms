version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: linkedincms-frontend
    environment:
      - NGINX_SERVER_NAME=linkedin.rafinhafaria.com.br
      - VITE_API_URL=http://backend:8000
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro

  backend:
    image: linkedincms-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: linkedincms-backend
    environment:
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads
  db:
    image: postgres:15
    container_name: linkedincms-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
   

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
